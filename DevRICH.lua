--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v88=v5(v81,v19);v19=nil;return v88;else return v81;end end end);local function v20(v31,v32,v33)if v33 then local v82=(1637 -(1523 + 114)) -0 ;local v83;while true do if (v82==(0 -0)) then v83=(v31/((3 -1)^(v32-(2 -1))))%(((559 + 62) -(555 + (91 -27)))^(((v33-(932 -(857 + 74))) -(v32-(569 -(367 + 201)))) + 1)) ;return v83-(v83%(928 -(214 + 713))) ;end end else local v84=((1066 -(68 + 997)) + 1)^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and (878 -(282 + 595))) or 0 ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=1270 -(226 + 1044) ;local v36;local v37;while true do if (v35==(4 -(183 -(67 + 113)))) then return (v37 * (373 -(24 + 8 + 85))) + v36 ;end if (v35==(0 -0)) then v36,v37=v1(v16,v18,v18 + (3 -1) );v18=v18 + (3 -1) ;v35=1 + (0 -0) ;end end end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 + 0 );v18=v18 + (15 -11) ;return (v41 * (16778168 -(802 + 150))) + (v40 * (176444 -110908)) + (v39 * (464 -208)) + v38 ;end local function v24()local v42=v23();local v43=v23();local v44=1;local v45=(v20(v43,998 -(915 + 82) ,56 -36 ) * ((2 + 0)^(41 -9))) + v42 ;local v46=v20(v43,1208 -((1507 -(145 + 293)) + 118) ,31);local v47=((v20(v43,72 -40 )==(1 -0)) and  -(1 + 0)) or (1 -0) ;if (v46==(0 + 0)) then if (v45==(791 -(368 + 423))) then return v47 * (0 -0) ;else v46=1;v44=(1504 -(998 + 488)) -(10 + 8) ;end elseif (v46==(7874 -5827)) then return ((v45==(442 -(133 + 283 + 26))) and (v47 * (((3 + 0) -2)/0))) or (v47 * NaN) ;end return v8(v47,v46-(440 + 583) ) * (v44 + (v45/(((433 -(44 + 386)) -1)^52))) ;end local function v25(v48)local v49;if  not v48 then v48=v23();if (v48==(772 -(201 + 571))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(4 -3) );v18=v18 + v48 ;local v50={};for v65=1, #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 -0 ;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==3) then v58=nil;while true do local v89=0;while true do if (v89~=(675 -(534 + 141))) then else if (v52==(0 + 0)) then v53={};v54={};v55={};v52=1 + 0 ;end if (v52~=2) then else local v94=0 + 0 ;while true do if (v94==(0 -0)) then for v141=1 -0 ,v57 do local v142=0 -0 ;local v143;local v144;while true do if (v142==0) then local v188=0 + 0 ;local v189;while true do if ((0 + 0)~=v188) then else v189=396 -(115 + 281) ;while true do if (v189==(2 -1)) then v142=1;break;end if (0~=v189) then else local v200=0 + 0 ;while true do if (v200==(2 -1)) then v189=1;break;end if (v200==(0 -0)) then v143=v21();v144=nil;v200=868 -(550 + 317) ;end end end end break;end end end if (v142==(1 -0)) then if (v143==(1 -0)) then v144=v21()~=0 ;elseif (v143==(5 -3)) then v144=v24();elseif (v143~=3) then else v144=v25();end v58[v141]=v144;break;end end end v56[288 -(134 + 151) ]=v21();v94=1;end if (v94==(1666 -(970 + 695))) then for v145=1,v23() do local v146=0;local v147;local v148;while true do if (0~=v146) then else v147=0 -0 ;v148=nil;v146=1;end if ((1991 -(582 + 1408))==v146) then while true do if (v147==0) then v148=v21();if (v20(v148,3 -2 ,1 -0 )==(0 -0)) then local v195=0;local v196;local v197;local v198;local v199;while true do if (v195~=1) then else local v201=0;while true do if ((1824 -(1195 + 629))~=v201) then else v198=nil;v199=nil;v201=1 -0 ;end if (v201~=1) then else v195=243 -(187 + 54) ;break;end end end if (v195==(780 -(162 + 618))) then local v202=0;while true do if (v202~=1) then else v195=1 + 0 ;break;end if (v202==(0 + 0)) then v196=0;v197=nil;v202=1 -0 ;end end end if (v195==(2 -0)) then while true do if (v196~=(1 + 2)) then else if (v20(v198,1639 -(1373 + 263) ,3)==(1001 -(451 + 549))) then v199[2 + 2 ]=v58[v199[4]];end v53[v145]=v199;break;end if (v196==0) then local v204=0 -0 ;local v205;while true do if (v204==(0 -0)) then v205=1384 -(746 + 638) ;while true do if (v205~=1) then else v196=1 + 0 ;break;end if ((0 -0)==v205) then local v213=341 -(218 + 123) ;while true do if (v213~=(1581 -(1535 + 46))) then else v197=v20(v148,2,3 + 0 );v198=v20(v148,4,6);v213=1;end if (v213==1) then v205=1 + 0 ;break;end end end end break;end end end if (v196~=2) then else local v206=0;local v207;local v208;while true do if (v206~=0) then else v207=560 -(306 + 254) ;v208=nil;v206=1;end if (v206~=(1 + 0)) then else while true do if (v207==0) then v208=0;while true do if (v208~=(0 -0)) then else local v215=1467 -(899 + 568) ;local v216;while true do if ((0 + 0)==v215) then v216=0 -0 ;while true do if (v216==(604 -(268 + 335))) then v208=291 -(60 + 230) ;break;end if ((572 -(426 + 146))==v216) then local v220=0 + 0 ;while true do if (0~=v220) then else if (v20(v198,1,1457 -(282 + 1174) )==1) then v199[813 -(569 + 242) ]=v58[v199[2]];end if (v20(v198,5 -3 ,1 + 1 )==(1025 -(706 + 318))) then v199[3]=v58[v199[1254 -(721 + 530) ]];end v220=1272 -(945 + 326) ;end if (1~=v220) then else v216=1;break;end end end end break;end end end if ((2 -1)==v208) then v196=3;break;end end break;end end break;end end end if (v196~=1) then else local v209=0 + 0 ;local v210;while true do if (v209==(700 -(271 + 429))) then v210=0 + 0 ;while true do if (v210~=(1500 -(1408 + 92))) then else local v214=0;while true do if (v214==1) then v210=1;break;end if (v214==0) then local v217=0;while true do if (v217==(1087 -(461 + 625))) then v214=1;break;end if (v217~=0) then else v199={v22(),v22(),nil,nil};if (v197==(1171 -(418 + 753))) then local v218=0;local v219;while true do if (v218==0) then v219=0;while true do if (v219==(0 + 0)) then v199[1 + 2 ]=v22();v199[4]=v22();break;end end break;end end elseif (v197==1) then v199[3]=v23();elseif (v197==(1 + 1)) then v199[1 + 2 ]=v23() -(2^(545 -(406 + 123))) ;elseif (v197==(1772 -(1749 + 20))) then local v229=0;local v230;while true do if (v229==0) then v230=0;while true do if (0==v230) then v199[1 + 2 ]=v23() -(2^(1338 -(1249 + 73))) ;v199[4]=v22();break;end end break;end end end v217=1 + 0 ;end end end end end if (v210~=(1146 -(466 + 679))) then else v196=4 -2 ;break;end end break;end end end end break;end end end break;end end break;end end end v52=3;break;end end end v89=2 -1 ;end if (v89==(1901 -(106 + 1794))) then if ((1 + 2)==v52) then for v96=1 + 0 ,v23() do v54[v96-(2 -1) ]=v28();end return v56;end if (1==v52) then local v95=0 -0 ;while true do if (v95==0) then v56={v53,v54,nil,v55};v57=v23();v95=1428 -(41 + 1386) ;end if (v95~=(104 -(17 + 86))) then else v58={};v52=2 + 0 ;break;end end end break;end end end break;end if (1==v51) then v54=nil;v55=nil;v51=3 -1 ;end if (v51~=(5 -3)) then else v56=nil;v57=nil;v51=169 -(122 + 44) ;end if ((0 -0)~=v51) then else v52=0;v53=nil;v51=3 -2 ;end end end local function v29(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v85=0,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + 1 ];else v77[v85]=v74[v85 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=19) then if (v80<=9) then if (v80<=4) then if (v80<=1) then if (v80==0) then local v99=v79[2];v77[v99](v13(v77,v99 + 1 ,v79[3]));else v77[v79[2]]=v61[v79[3]];end elseif (v80<=2) then v77[v79[2]][v79[3]]=v79[4];elseif (v80==3) then v77[v79[2]]=v79[3]~=0 ;else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=6) then if (v80>5) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80<=7) then local v106=v79[2];v77[v106]=v77[v106](v13(v77,v106 + 1 ,v79[3]));elseif (v80>8) then v77[v79[2]]=v79[3]~=0 ;else local v162=0;local v163;while true do if (v162==0) then v163=v79[2];v77[v163]=v77[v163](v13(v77,v163 + 1 ,v72));break;end end end elseif (v80<=14) then if (v80<=11) then if (v80==10) then v77[v79[2]]=v77[v79[3]];else local v110=v79[2];local v111=v77[v79[3]];v77[v110 + 1 ]=v111;v77[v110]=v111[v79[4]];end elseif (v80<=12) then v77[v79[2]]=v61[v79[3]];elseif (v80==13) then v77[v79[2]]=v29(v68[v79[3]],nil,v61);else v77[v79[2]]=v79[3];end elseif (v80<=16) then if (v80==15) then for v149=v79[2],v79[3] do v77[v149]=nil;end else local v117=0;local v118;while true do if (v117==0) then v118=v79[2];v77[v118]=v77[v118](v77[v118 + 1 ]);break;end end end elseif (v80<=17) then local v119=v79[2];v77[v119](v13(v77,v119 + 1 ,v79[3]));elseif (v80==18) then v77[v79[2]]=v79[3];else local v169=v79[2];v77[v169]=v77[v169](v77[v169 + 1 ]);end elseif (v80<=29) then if (v80<=24) then if (v80<=21) then if (v80>20) then v77[v79[2]]=v77[v79[3]];else v77[v79[2]][v79[3]]=v79[4];end elseif (v80<=22) then local v124=v79[2];local v125,v126=v70(v77[v124](v13(v77,v124 + 1 ,v79[3])));v72=(v126 + v124) -1 ;local v127=0;for v151=v124,v72 do v127=v127 + 1 ;v77[v151]=v125[v127];end elseif (v80==23) then v71=v79[3];else for v179=v79[2],v79[3] do v77[v179]=nil;end end elseif (v80<=26) then if (v80>25) then do return;end elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=27) then local v128=v79[2];local v129,v130=v70(v77[v128](v13(v77,v128 + 1 ,v79[3])));v72=(v130 + v128) -1 ;local v131=0;for v154=v128,v72 do v131=v131 + 1 ;v77[v154]=v129[v131];end elseif (v80>28) then v77[v79[2]]();else v77[v79[2]]();end elseif (v80<=34) then if (v80<=31) then if (v80==30) then v71=v79[3];else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=32) then v77[v79[2]]=v29(v68[v79[3]],nil,v61);elseif (v80>33) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end else local v173=v79[2];v77[v173]=v77[v173](v13(v77,v173 + 1 ,v79[3]));end elseif (v80<=36) then if (v80==35) then do return;end else local v136=0;local v137;while true do if (v136==0) then v137=v79[2];v77[v137]=v77[v137](v13(v77,v137 + 1 ,v72));break;end end end elseif (v80<=37) then local v138=0;local v139;local v140;while true do if (v138==0) then v139=v79[2];v140=v77[v79[3]];v138=1;end if (1==v138) then v77[v139 + 1 ]=v140;v77[v139]=v140[v79[4]];break;end end elseif (v80==38) then v77[v79[2]]=v77[v79[3]][v79[4]];elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
